一、基本介绍
Java泛型是J2 SE1.5中引入的一个新特性，其本质是参数化类型，也就是说所操作的数据类型被指定为一个参数（type parameter）这种参数类型可以用在类、接口和方法的创建中，分别称为泛型类、泛型接口、泛型方法。

二、泛型的优点
1、类型安全
泛型的主要目的是提高Java程序的类型安全。通过知道使用泛型定义的变量的类型限制，编译器可以在非常高的层次上验证类型假设。没有泛型，这些假设就只能存在于系统开发人员的头脑中。

通过在变量声明中捕获这一附加的类型信息，泛型允许编译器实施这些附加的类型约束。类型错误就可以在编译时被捕获了，而不是在运行时当作ClassCastException展示出来。将类型检查从运行时挪到编译时有助于Java开发人员更早、更容易地找到错误，并可提高程序的可靠性。

2、消除强制类型转换
泛型的一个附带好处是，消除源代码中的许多强制类型转换。这使得代码更加可读，并且减少了出错机会。尽管减少强制类型转换可以提高使用泛型类的代码的累赞程度，但是声明泛型变量时却会带来相应的累赞程度。在简单的程序中使用一次泛型变量不会降低代码累赞程度。但是对于多次使用泛型变量的大型程序来说，则可以累积起来降低累赞程度。所以泛型消除了强制类型转换之后，会使得代码加清晰和筒洁。

3、更高的效率
在非泛型编程中，将筒单类型作为Object传递时会引起Boxing（装箱）和Unboxing（拆箱）操作，这两个过程都是具有很大开销的。引入泛型后，就不必进行Boxing和Unboxing操作了，所以运行效率相对较高，特别在对集合操作非常频繁的系统中，这个特点带来的性能提升更加明显。

4、潜在的性能收益
泛型为较大的优化带来可能。在泛型的初始实现中，编译器将强制类型转换（没有泛型的话，Java系统开发人员会指定这些强制类型转换）插入生成的字节码中。但是更多类型信息可用于编译器这一事实，为未来版本的JVM的优化带来可能。

四、常见泛型字母含义
格式： 类名<字母列表>

T Type表示类型

K V 分辨表示键值对中的key value

E 代表Element

?表示不确定的类型

五、使用泛型时的注意事项
1、在定义一个泛型类时，在“<>”之间定义形式类型参数，例如：“class TestGen<K,V>”，其中“K”，“V”不代表值，而是表示类型。

2、实例化泛型对象时，一定要在类名后面指定类型参数的值（类型），一共要有两次书写。

3、使用泛型时，泛型类型必须为引用数据类型，不能为基本数据类型，Java中的普通方法，构造方法，静态方法中都可以使用泛型，方法使用泛型之前必须先对泛型进行声明，可以使用任意字母，一般都要大写。

4、不可以定义泛型数组。

5、在static方法中不可以使用泛型，泛型变量也不可以用static关键字来修饰。

6、根据同一个泛型类衍生出来的多个类之间没有任何关系，不可以互相赋值。

7、泛型只在编译器有效

六、泛型的使用
泛型有三种使用方式，分别为：泛型类、泛型接口、泛型方法

总：
https://blog.csdn.net/guorui_java/article/details/121304482

其他
* https://juejin.cn/post/6911302681583681544#heading-4
 * https://blog.csdn.net/swadian2008/article/details/100611243
 * https://www.cnblogs.com/wxw7blog/p/7517343.html
 *
 * 大佬文章：
 * https://www.cnblogs.com/zhenyu-go/p/5536667.html 后面那个讲的不是很清楚
 *
 * https://www.zhihu.com/question/20400700/answer/117464182 这个讲的还可

 这篇很详细
 https://ata.alibaba-inc.com/articles/181761?spm=ata.23639746.0.0.4e2b207fjK5F83#rzGlyVVn



